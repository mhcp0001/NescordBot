{
  "env": {
    "DISABLE_TELEMETRY": "1",
    "DISABLE_ERROR_REPORTING": "1",
    "DISABLE_BUG_COMMAND": "1"
  },
  "permissions": {
    "allow": [
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(gh run view:*)",
      "Bash(gh run list:*)",
      "mcp__github__get_pull_request_comments",
      "Bash(gh pr view:*)",
      "mcp__gemini-yusukedev__gemini_chat_pro",
      "Bash(git push:*)",
      "Bash(gh pr checks:*)",
      "mcp__serena__write_memory",
      "mcp__serena__read_memory",
      "mcp__serena__list_memories",
      "Bash(gh workflow list:*)",
      "Bash(gh workflow disable:*)",
      "Bash(gh issue:*)",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__find_symbol",
      "mcp__serena__list_dir",
      "Bash(poetry run pytest:*)",
      "Bash(poetry run mypy:*)",
      "Bash(poetry run black:*)",
      "Bash(gh project item-list:*)",
      "Bash(git branch:*)",
      "Bash(gh pr list:*)",
      "mcp__serena__insert_after_symbol",
      "mcp__serena__replace_symbol_body",
      "Bash(gh project list:*)",
      "mcp__serena__find_file",
      "mcp__serena__search_for_pattern",
      "Bash(git log:*)",
      "Bash(gh pr create:*)",
      "Bash(git checkout:*)",
      "Bash(git stash push:*)",
      "Bash(gh api:*)",
      "WebSearch",
      "mcp__vibe_kanban__list_tasks",
      "mcp__vibe_kanban__update_task"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "github",
    "context7",
    "playwright",
    "readability"
  ],
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "powershell -ExecutionPolicy Bypass -WindowStyle Hidden -File .claude/scripts/deny-check.ps1"
          }
        ]
      }
    ]
  }
}
