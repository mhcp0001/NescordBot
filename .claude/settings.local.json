{
  "env": {
    "DISABLE_TELEMETRY": "1",
    "DISABLE_ERROR_REPORTING": "1",
    "DISABLE_BUG_COMMAND": "1"
  },
  "permissions": {
    "allow": [
      "Bash(git checkout:*)",
      "Bash(docker compose up -d --build:*)",
      "Bash(gh api:*)",
      "Bash(gh issue:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh project item-list:*)",
      "Bash(gh project list:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh workflow disable:*)",
      "Bash(gh workflow list:*)",
      "Bash(git add:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(git diff:*)",
      "Bash(git init:*)",
      "Bash(git log:*)",
      "Bash(git pull:*)",
      "Bash(git push:*)",
      "Bash(git stash push:*)",
      "Bash(git status:*)",
      "Bash(head:*)",
      "Bash(kill *)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(npm install:*)",
      "Bash(pkill apache*)",
      "Bash(pkill express*)",
      "Bash(pkill jest*)",
      "Bash(pkill mysql*)",
      "Bash(pkill nodemon*)",
      "Bash(pkill node*)",
      "Bash(pkill npm*)",
      "Bash(pkill ts-node*)",
      "Bash(pkill webpack*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm run build:*)",
      "Bash(pnpm run test:*)",
      "Bash(poetry --version)",
      "Bash(poetry check:*)",
      "Bash(poetry install:*)",
      "Bash(poetry run black:*)",
      "Bash(poetry run flake8:*)",
      "Bash(poetry run isort:*)",
      "Bash(poetry run mypy:*)",
      "Bash(poetry run python:*)",
      "Bash(poetry run pytest:*)",
      "Bash(pwd:*)",
      "Bash(rm -rf .tmp/**)",
      "Bash(rm .tmp/**)",
      "Bash(systemctl --user *)",
      "Bash(tail:*)",
      "Bash(tree:*)",
      "mcp__context7",
      "mcp__gemini-yusukedev",
      "mcp__github__get_pull_request_comments",
      "mcp__serena",
      "WebSearch"
    ],
    "deny": [
      "Bash(> /etc/*)",
      "Bash(>> /etc/*)",
      "Bash(*:(){*)",
      "Bash(*fork*)",
      "Bash(cat **/.env*)",
      "Bash(cat .env*)",
      "Bash(chmod:*)",
      "Bash(chown:*)",
      "Bash(curl:*)",
      "Bash(dd:*)",
      "Bash(fdisk:*)",
      "Bash(git rebase:*)",
      "Bash(git reset:*)",
      "Bash(grep * .env*)",
      "Bash(head .env*)",
      "Bash(head **/.env*)",
      "Bash(iptables:*)",
      "Bash(kill 1)",
      "Bash(kill -9 1)",
      "Bash(killall *)",
      "Bash(less .env*)",
      "Bash(less **/.env*)",
      "Bash(mkfs.*:*)",
      "Bash(mongod:*)",
      "Bash(more .env*)",
      "Bash(more **/.env*)",
      "Bash(mysql:*)",
      "Bash(nc:*)",
      "Bash(npm remove:*)",
      "Bash(npm uninstall:*)",
      "Bash(parted:*)",
      "Bash(pkill ssh*)",
      "Bash(pkill systemd*)",
      "Bash(pkill init*)",
      "Bash(pkill kernel*)",
      "Bash(pkill docker*)",
      "Bash(pkill nginx*)",
      "Bash(pkill apache*)",
      "Bash(pkill mysql*)",
      "Bash(pkill postgres*)",
      "Bash(psql:*)",
      "Bash(rm -rf *)",
      "Bash(rm -rf /)",
      "Bash(rm -rf /*)",
      "Bash(rm -rf ~/*)",
      "Bash(rm /*)",
      "Bash(rm ~/*)",
      "Bash(service:*)",
      "Bash(sudo:*)",
      "Bash(systemctl restart *)",
      "Bash(systemctl stop *)",
      "Bash(systemctl start *)",
      "Bash(systemctl disable *)",
      "Bash(systemctl enable *)",
      "Bash(tail .env*)",
      "Bash(tail **/.env*)",
      "Bash(ufw:*)",
      "Bash(wget:*)",
      "Read(**/*key*)",
      "Read(**/*password*)",
      "Read(**/*secret*)",
      "Read(**/*token*)",
      "Read(**/.env*)",
      "Read(**/secrets/**)",
      "Read(*.env)",
      "Read(.env*)",
      "Read(id_ed25519)",
      "Read(id_rsa)",
      "Write(**/.env*)",
      "Write(**/secrets/**)",
      "Write(*.env)",
      "Write(.env*)"
    ],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "context7",
    "github",
    "playwright",
    "readability"
  ],
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "powershell -ExecutionPolicy Bypass -WindowStyle Hidden -File .claude/scripts/deny-check.ps1"
          }
        ]
      }
    ]
  }
}
