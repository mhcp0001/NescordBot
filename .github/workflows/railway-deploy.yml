name: Railway Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

env:
  PYTHON_VERSION: "3.11"

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-v2

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction

    - name: Install FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Run code formatting check
      run: poetry run black src/ tests/ --check

    - name: Run import sorting check
      run: poetry run isort src/ tests/ --check-only

    - name: Run type checking
      run: poetry run mypy src/

    - name: Run tests
      run: poetry run pytest tests/ --cov=src --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true))

    steps:
    - uses: actions/checkout@v4

    - name: Setup Railway CLI
      uses: railway/cli@v2
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}

    - name: Deploy to Railway
      run: railway up --service ${{ secrets.RAILWAY_SERVICE_ID }}
      env:
        RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}

    - name: Verify deployment
      run: |
        echo "Deployment completed for commit: ${{ github.sha }}"
        echo "Branch: ${{ github.ref }}"
